// @if feat.babel
import gulp from 'gulp';
import del from 'del';
// @endif
// @if feat.typescript
import * as gulp from 'gulp';
import * as del from 'del';
// @endif
import {pluginMarkup} from './process-markup';
import {pluginCSS} from './process-css';
import {pluginJson} from './process-json';
import { buildPluginJavaScript } from './transpile';
import { CLIOptions } from 'aurelia-cli';
import watch from './watch';

let doneMessage = 'Finish building Aurelia plugin to dist/commonjs and dist/native-modules.';

function clean() {
  if (CLIOptions.getEnvironment()==='prod') {
    return del(['dist']);
  }
  return new Promise((resolve) => setTimeout(resolve, 100));
}

let build = gulp.series(
  clean,
  gulp.parallel(
    // package.json "module" field pointing to dist/native-modules/index.js
    pluginMarkup('dist/native-modules'),
    pluginCSS('dist/native-modules'),
    pluginJson('dist/native-modules'),
    buildPluginJavaScript('dist/native-modules', 'es2015'),

    // package.json "main" field pointing to dist/native-modules/index.js
    pluginMarkup('dist/commonjs'),
    pluginCSS('dist/commonjs'),
    pluginJson('dist/commonjs'),
    buildPluginJavaScript('dist/commonjs', 'commonjs')
  )
);

let main;

if (CLIOptions.hasFlag('watch')) {
  main = gulp.series(
    build,
    (done) => { console.log(doneMessage + 'Watching for changes'); watch(null, true); done(); }
  );
} else {
  main = gulp.series(
    build,
    () => console.log(doneMessage)
  );
}

export { main as default };
